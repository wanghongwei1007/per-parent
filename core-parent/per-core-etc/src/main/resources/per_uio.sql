delete  FROM public.per_uio;

INSERT INTO public.per_uio VALUES ('5003', '1.给出如下代码: class Test{ 　　private int m; 　　public static void fun() { 　　　　// some code... 　　} } 如何使成员变量m 被函数fun()直接访问', null, null, '2018-07-18 09:20:54', null, null, '2018-07-18 09:30:04.887', '2', '将private int m 改为protected int m  ', '将private int m 改为 public int m', '将private int m 改为 static int m ', '将private int m 改为 int m');
INSERT INTO public.per_uio VALUES ('5101', '已知如下代码： boolean m = true; if ( m == false ) System.out.println(False); else     System.out.println(True); 执行结果是什么？', null, null, '2018-07-18 09:55:42.381', null, null, '2018-07-18 09:55:42.377', '1', 'False', 'True', 'None', 'An error will occur when running.');
INSERT INTO public.per_uio VALUES ('5102', '以下哪个约束符可用于定义成员常量？', null, null, '2018-07-18 09:56:42.941', null, null, '2018-07-18 09:56:42.939', '1', 'static ', 'final ', 'abstract ', 'No modifier can be used');
INSERT INTO public.per_uio VALUES ('5103', '提供Java存取数据库能力的包是？', null, null, '2018-07-18 09:57:46.034', null, null, '2018-07-18 09:57:46.032', '1', 'java.sql ', 'java.awt ', 'java.lang ', 'java.swing');
INSERT INTO public.per_uio VALUES ('5104', ' Java I/O程序设计中，下列描述正确的是', null, null, '2018-07-18 09:58:23.782', null, null, '2018-07-18 09:58:23.78', '1', 'OutputStream用于写操作', 'InputStream用于写操作 ', ' I/O库不支持对文件可读可写API', '  ');
INSERT INTO public.per_uio VALUES ('5105', ' Java中，如果类C是类B的子类，类B是类A的子类，那么下面描述正确的是', null, null, '2018-07-18 10:00:02.93', null, null, '2018-07-18 10:00:02.929', '1', ' C不仅继承了B中的成员，同样也继承了A中的成员 ', ' C只继承了B中的成员 ', 'C只继承了A中的成员 ', ' C不能继承A或B中的成员');
INSERT INTO public.per_uio VALUES ('5106', '分析选项中关于Java中this关键字的说法正确的是', null, null, '2018-07-18 10:00:50.447', null, null, '2018-07-18 10:00:50.438', '1', ' this关键字是在对象内部指代自身的引用', ' this关键字可以在类中的任何位置使用', ' this关键字和类关联，而不是和特定的对象关联', '同一个类的不同对象共用一个this');
INSERT INTO public.per_uio VALUES ('5107', '在JAVA中ArrayList类实现了可变大小的数组，便于遍历元素和随机访问元素，已知 获得了ArrayList类的对象bookTypeList，则下列语句中能够实现判断列表中是否存在字符串“小说”的是', null, null, '2018-07-18 10:01:19.435', null, null, '2018-07-18 10:01:19.433', '1', 'bookTypeList.add(“小说”); ', ' bookTypeList.get(“小说”); ', ' bookTypeList.contains(“小说”); ', 'bookTypeList.remove(“小说”);');
INSERT INTO public.per_uio VALUES ('5108', ' 在java中下列关于自动类型转换说法正确的是', null, null, '2018-07-18 10:01:44.087', null, null, '2018-07-18 10:01:44.084', '1', ' 基本数据类型和String相加结果一定是字符串型 ', 'char类型和int类型相加结果一定是字符 ', 'double类型可以自动转换为int ', 'char + int + double +”” 结果一定是double');
INSERT INTO public.per_uio VALUES ('5109', '在Java中,关于构造方法，下列说法错误的是', null, null, '2018-07-18 10:02:26.889', null, null, '2018-07-18 10:02:26.886', '1', '构造方法的名称必须与类名相同 ', '构造方法可以带参数 ', '构造方法不可以重载 ', ' 构造方法绝对不能有返回值');
INSERT INTO public.per_uio VALUES ('5110', '下面（ ）不是String类提供的合法的方法。', null, null, '2018-07-18 10:03:09.801', null, null, '2018-07-18 10:03:09.799', '1', 'equals()   ', ' trim() ', 'append()  ', ' indexOf()');
INSERT INTO public.per_uio VALUES ('5111', '在JAVA中，以下（ ）类的对象以键-值的方式存储对象', null, null, '2018-07-18 10:03:38.062', null, null, '2018-07-18 10:03:38.06', '1', 'java.util.List ', ' java.util.ArrayList ', 'java.util.HashMap ', 'java.util.LinkedList');
INSERT INTO public.per_uio VALUES ('5112', '以下哪些不是javascript的全局函数', null, null, '2018-07-18 10:04:05.501', null, null, '2018-07-18 10:04:05.496', '1', 'eval   ', ' escape', 'setTimeout  ', 'parseFloat');
INSERT INTO public.per_uio VALUES ('5121', ' 关于以下程序代码的说明正确的是：(    )    public class HasStatic{    private static int x=100;     public static void main(String args[]){       HasStatic hs1=new HasStatic();     hs1.x++;      HasStatic  hs2=new HasStatic();      hs2.x++;    hs1=new HasStatic();    hs1.x++;      HasStatic.x--;   System.out.println(x=+x);     }    }   ', null, null, '2018-07-18 10:18:37', null, null, '2018-07-18 10:29:21.288', '3', '程序通过编译，输出结果为：x=103', '10行不能通过编译，因为x是私有静态变量', '5行不能通过编译，因为引用了私有静态变量', '程序通过编译，输出结果为：x=102');
INSERT INTO public.per_uio VALUES ('5201', '定义字符串：String s1=hello；对下面程序描述正确的是if(s1==hello){   System.out.println(s1 = \hello\); }else{  System.out.println(s1 !=hello); }   ', null, null, '2018-07-18 10:30:17.914', null, null, '2018-07-18 10:30:17.912', '1', '输出 s1 !=hello', '编译正确,运行错误', '产生编译错误', '输出 s1=hello');
INSERT INTO public.per_uio VALUES ('5202', '设x为int型变量，则执行以下语句段后，x的值为 x=10; x+=x-=x-x;   ', null, null, '2018-07-18 10:31:12.079', null, null, '2018-07-18 10:31:12.075', '1', '30  ', '20', ' 40     ', ' 10');
INSERT INTO public.per_uio VALUES ('5203', '项目中的技术风险是通常是通过（  ）方法来缓解的   ', null, null, '2018-07-18 10:31:40.637', null, null, '2018-07-18 10:31:40.635', '1', ' 技术文档', '架构原型验证', '代码复审', ' 单元测试');
INSERT INTO public.per_uio VALUES ('5204', '执行下面代码,下面描述正确的是：(    ) public class Person{    static int arr[] = new int[10];    public static void main(String a[]){      System.out.println(arr[1]);    } }   ', null, null, '2018-07-18 10:32:13.752', null, null, '2018-07-18 10:32:13.749', '1', '产生编译错误  ', '输出空', '编译正确,运行错误', '输出0');
INSERT INTO public.per_uio VALUES ('5205', '执行如下两个查询，结果为： (    ) SELECT ename name, sal salary FROM emp order by salary; SELECT ename name, sal SALARY FROM emp order by sal ASC；', null, null, '2018-07-18 10:32:43.263', null, null, '2018-07-18 10:32:43.26', '1', '两个查询结果完全相同', '第二个查询正确，第一个查询错误', '第一个查询正确，第二个查询错误', '两个查询结果不同');
INSERT INTO public.per_uio VALUES ('5206', '下面哪个Map是排序的？', null, null, '2018-07-18 10:33:35.426', null, null, '2018-07-18 10:33:35.424', '1', 'TreeMap', ' HashMap', 'Hashtable', 'WeakHashMap');
INSERT INTO public.per_uio VALUES ('5207', '执行下列语句后，i 和n的值为（  ）int i=10;int n= i++%5; ', null, null, '2018-07-18 10:34:12.465', null, null, '2018-07-18 10:34:12.464', '1', ' 10，0      ', '11，0', '10，1  ', '11，1');
INSERT INTO public.per_uio VALUES ('5208', '表的主键特点中，说法错误的是', null, null, '2018-07-18 10:35:13.04', null, null, '2018-07-18 10:35:13.033', '1', '主键的每一列都必须非空', '主键的每一列都必须唯一', '一个表只能定义一个住键', '主键可以定义在表级或列级');
INSERT INTO public.per_uio VALUES ('5209', '软件设计中划分模块的一个准则是', null, null, '2018-07-18 10:35:37.757', null, null, '2018-07-18 10:35:37.756', '1', ' 低内聚高耦合', '低内聚低耦合', '高内聚低耦合', '高内聚高耦合');
INSERT INTO public.per_uio VALUES ('5210', '如果你被要求写一段代码读取一个文本文件，那么一般使用哪种Stream？', null, null, '2018-07-18 10:36:04.908', null, null, '2018-07-18 10:36:04.906', '1', 'DataInputStream', 'ObjectInputStream', 'FileReader', 'FileInputStream');
INSERT INTO public.per_uio VALUES ('5211', '下面关于缺省构造方法的描述中正确的是', null, null, '2018-07-18 10:36:30.131', null, null, '2018-07-18 10:36:30.127', '1', '当类中没有定义任何构造方法时，Java编译器将为这个类创建缺省构造方法', '缺省构造方法可以初始化其他方法中定义的变量', '. Java编译器会为所有的类创建缺省构造方法', ' 如果在一个类中定义的构造方法都声明了参数，Java编译器将为这个类创建一个缺省构造方法');
INSERT INTO public.per_uio VALUES ('5212', '下列代码编译和执行后的结果是(    ) public class Test {    public void myMethod(Object o) {        System.out.println(My Object);    }    public void myMethod(String s) {        System.out.println(My String);    }    public static void main(String args[]) {        Test t = new Test();        t.myMethod(null);    } }', null, null, '2018-07-18 10:37:01.899', null, null, '2018-07-18 10:37:01.897', '1', ' 代码不打印任何东西', '代码打印出My String', '代码打印出My Object', '代码抛出一个Runtime的异常');
INSERT INTO public.per_uio VALUES ('5213', '对于下列代码:哪些表达式返回值为true。(    ) public class Sample{    long length;    public Sample(long l){ length=l;}    public static void main(String arg[])   {       Sample s1,s2,s3;      s1=new Sample(21L);      s2=new Sample(21L);      s3=s2;    } }', null, null, '2018-07-18 10:37:40.201', null, null, '2018-07-18 10:37:40.198', '1', 's1==s2;', 's2.equals(s3)', ' s1.equals(s2)', 's2!=s3;');
INSERT INTO public.per_uio VALUES ('5214', '下列程序段执行后，t5的结果是：(     ) int t1=5,t2=6,t3=7,t4,t5; t4=t1<t2?t1:t2; t5=t4<t3?t4:t3;', null, null, '2018-07-18 10:38:09.47', null, null, '2018-07-18 10:38:09.467', '1', '7', ' 5', '6', '8');
